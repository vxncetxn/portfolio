---
import "../base.css";
// import { CanvasControlFlow } from "../components/CanvasControlFlow";
// import { ThemeTool } from "../components/ThemeTool";
// import { ColorTool } from "../components/ColorTool";
// import Content from "../components/Content.astro";
// import { SEO } from "astro-seo";
import TestCanvas from "../components/TestCanvas.svelte";
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <script
      type="module"
      src={(await import("../lib/offscreen-worker.tsx?url")).default}
    ></script>
    <script>
      import { theme } from "../stores/theme";
      import { debounce } from "../lib/debounce";

      var setVh = function () {
        var svh = document.documentElement.clientHeight * 0.01;
        document.documentElement.style.setProperty("--1svh", svh + "px");
        var dvh = window.innerHeight * 0.01;
        document.documentElement.style.setProperty("--1dvh", dvh + "px");

        if (document.body) {
          var fixed = document.createElement("div");
          fixed.style.width = "1px";
          fixed.style.height = "100vh";
          fixed.style.position = "fixed";
          fixed.style.left = "0";
          fixed.style.top = "0";
          fixed.style.bottom = "0";
          fixed.style.visibility = "hidden";

          document.body.appendChild(fixed);

          var fixedHeight = fixed.clientHeight;

          fixed.remove();

          var lvh = fixedHeight * 0.01;

          document.documentElement.style.setProperty("--1lvh", lvh + "px");
        }
      };

      (function () {
        // themes
        const storedTheme = window.localStorage.getItem("theme");
        const darkModePref = window.matchMedia("(prefers-color-scheme: dark)");
        if (storedTheme) {
          theme.set(storedTheme);
        } else if (darkModePref.matches) {
          theme.set("dark");
        } else {
          theme.set("light");
        }
        darkModePref.addEventListener("change", (e) => {
          if (!storedTheme) {
            if (e.matches) {
              theme.set("dark");
            } else {
              theme.set("light");
            }
          }
        });

        // svh units
        setVh();
        document.addEventListener("DOMContentLoaded", function () {
          setVh();
        });
        window.addEventListener(
          "resize",
          debounce(function () {
            setVh();
          }, 500)
        );
      })();
    </script>
    <!-- <SEO
      title="Vance Tan // VXN"
      description="Vance Tan is a software engineer and designer based in Singapore who is passionate about building beautiful experiences on the web."
      openGraph={{
        basic: {
          title: "Vance Tan // VXN",
          type: "website",
          image: "/meta/meta-image.jpg",
        },
        image: {
          alt: "Cover image for vancetan.me",
          type: "image/jpeg",
          width: 1200,
          height: 630,
        },
      }}
      twitter={{
        card: "summary_large_image",
        site: "@vxncetxn",
        creator: "@vxncetxn",
      }}
      extend={{
        meta: [
          {
            name: "twitter:image",
            content: "/meta/meta-image-twitter.jpg",
          },
        ],
      }}
    /> -->
    <link rel="icon" type="image/svg+xml" href="/meta/favicon.svg" />
  </head>
  <body
    class="relative flex items-center justify-center w-screen h-[calc(var(--1svh,1vh)*100)] supports-svh:h-[100svh] min-h-[664px] transition-colors bg-neutral-01 overflow-x-hidden"
  >
    <TestCanvas client:only="svelte" />
    <!-- <CanvasControlFlow client:only="react" /> -->
    <main
      class="relative flex flex-col space-y-32 tablet:space-y-0 items-start justify-between w-full h-full max-w-[96rem] max-h-[67.5rem] px-16 mobile:px-24 tablet:px-64 desktop:px-120 py-24 mobile:py-32 tablet:py-48 desktop:py-64 overflow-x-hidden"
    >
      Hello Svelte!
      <!-- <div
        class="relative flex h-32 -translate-x-4 tablet:h-40 desktop:h-48 tablet:absolute tablet:right-64 desktop:right-120 tablet:top-48 desktop:top-64 tablet:translate-x-0 tablet:-translate-y-4"
      >
        <ThemeTool client:only="react" />
        <ColorTool client:only="react" />
      </div>
      <Content /> -->
    </main>
  </body>
</html>
